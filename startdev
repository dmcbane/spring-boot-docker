#! /usr/bin/env bash

if [ -L "$0" ]; then
    s="$(realpath -e "$0")"  # try readlink -f if realpath is missing
else
    s="$0"
fi
spth="$(cd "$(dirname "$s")"; pwd -P)"
ppth="${spth}/project"

if [ $# -gt 1 ]; then
    echo "Usage: $(basename "$0") <project path>"
    exit 2
elif [ $# -eq 1 ]; then
    newpth="$(cd "$(dirname "$1")"; pwd -P)/$(basename $1)"
    if [ ! -d "${newpth}" ]; then
        echo "Usage: $(basename "$0") <project path>"
        echo ""
        echo "<project path> must be a directory"
        exit 3
    else
        if [ "${ppth}" == "${newpth}" ]; then
            echo "Can't change <project path> to itself"
            echo ""
            echo "Try $(basename "$0") without parameters"
            exit 4
        elif [ -L "${ppth}" ]; then
            rm "${ppth}"
        elif [ -f "${ppth}" ] || [ -d "${ppth}" ]; then
            echo "Can't change <project path> to ${newpth}"
            echo "${ppth} is not a symlink"
            exit 5
        fi
        ln -s "${newpth}" "${ppth}"
    fi
elif [ $# -eq 0 ]; then
    if [ ! -d "${ppth}" ] && [ ! -f "${ppth}" ]; then
        echo "${ppth} does not exist"
        echo ""
        echo "Try $(basename "$0") with a path to the project"
        echo "Usage: $(basename "$0") <project path>"
        exit 6
    fi
fi

if [ ! -d "${ppth}" ]; then
    echo "$(basename "$0") cannot continue because ${ppth} is not a directory"
    exit 7
fi

cd "${spth}"

USER=$(whoami) USERID=$(id -u) docker compose run --rm -p 8080:8080 -v "${ppth}":/app -v "${ppth}/.dockerdev/.gradle":/dotgradle dev /bin/bash

